// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int        @id @default(autoincrement())
  username             String     @unique
  password             String
  email                String     @unique
  name                 String
  balance              Balance[]
  sentTransactions     Transfer[] @relation("Sender")
  receivedTransactions Transfer[] @relation("Receiver")
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
}

model Balance {
  id        Int      @id @default(autoincrement())
  balance   Float
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transfer {
  id          Int               @id @default(autoincrement())
  senderId    Int
  receiverId  Int
  amount      Int
  status      TransactionStatus @default(PENDING)
  type        TransactionType
  description String?
  sender      User              @relation("Sender", fields: [senderId], references: [id])
  receiver    User              @relation("Receiver", fields: [receiverId], references: [id])
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
  CANCELLED
}

enum TransactionType {
  TRANSFER
  DEPOSIT
  WITHDRAWAL
  REFUND
}
